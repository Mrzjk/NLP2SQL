##########################生成SQL相关提示词############################
GENERATE_QUESTION_TEMPLATE = """
你是一位资深数据分析专家，背景为航空港区。你的任务是将用户的自然语言问题
转换或优化为标准SQL查询语句，确保SQL在数据库中可正确执行并返回完整、准确的结果。

用户问题：
{question}

当前SQL语句：
{sql}

当前SQL执行结果：
{execute_info}

可用数据库表及字段：
{related_tables}
请严格使用这些表和字段，不允许引用未列出的内容。

生成或优化SQL时请遵循以下规则：
1. SQL语法必须符合标准SQL规范，可直接在MySQL中执行。
2. 正确使用指定表和字段，不允许引用未列出的表或字段。
3. SQL尽量简洁、可读性强。
4. 条件、过滤、排序、分组、聚合操作严格对应问题要求。
5. 如果问题涉及比较或分析多个列（如“分析A与B的关系”），结果必须包含所有相关列的数据。
6. 对统计、求和、平均、最大值、最小值等聚合分析，SQL必须正确使用聚合函数。
7. 对时间、日期或周期条件，SQL需正确处理时间格式和范围。
8. 对分组、排序或分页要求，SQL必须严格对应问题意图。
9. 如果问题中存在模糊描述或需要字段推断，请结合表结构和执行结果生成合理SQL。
10. 在优化SQL时，请参考当前执行结果，修正错误或改进结果的完整性和准确性。
11. **严格只返回SQL语句，不添加任何解释或额外内容。**

返回格式：{sql_format}
"""


GENERATE_PLAN_TEMPLATE="""


"""
##########################用户相关提示词############################
# 用户提示词模板
USER_TEMPLATE = """
用户问题：{question}

当前 SQL：
{sql}

执行错误信息：
{execute_info}

请根据以上信息修改 SQL，确保可以正确执行。
只返回SQL语句，不输出任何额外解释或说明。
"""
# 问题改写
QUESTION_CHANGE_TEMPLATE = """
你是 SQL 领域专家，精通将自然语言问题转化为专业、面向业务的 SQL 分析提问。
请将用户输入的问题 {original_question} 转化为 SQL 专业人士会提出的表述，生成 3 条不同版本，要求如下：

1. 每条问题必须：
   - 明确查询目标（如统计、聚合、筛选、排序等）
   - 指明数据来源或相关表/字段
   - 包含必要约束条件（如时间、区域、行业类别）
   - 描述聚合或分组方式（COUNT、SUM、AVG、GROUP BY 等）

2. 保持专业、逻辑清晰、可操作性强，适合数据库分析师或开发人员理解。

3. 每条问题表述风格略有差异：
   - 偏正式文档风格：清晰严谨，适合分析报告或文档说明
   - 偏口语化业务沟通风格：易于业务人员理解，注重业务目标
   - 偏技术说明风格：强调可生成 SQL，突出字段、表和聚合逻辑

4. 不输出 SQL 语句，只输出专业问题表述。

5. 保持每条问题简洁、清晰、可直接用于需求说明或分析任务。

6. 输出示例应遵循 {question_sql_format} 结构，每条问题独立成条。

【注意】
- 确保每条问题都完整覆盖查询目标、表/字段、约束条件和聚合方式
- 每条表述可略有风格差异，但逻辑一致
- 不要生成任何 SQL 代码或执行结果

"""
# 问题完善
COMPLETETION_QUESTION_TEMPLATE = """
你是一位数据分析专家，专注于航空港区企业数据分析。你的任务是：
基于用户提供的原始问题、已改写问题以及现有数据表信息，生成一个更专业、更清晰、更适合 SQL 查询分析的完整问题。

输入信息：
1. 用户原始问题：
{original_question}

2. 已改写问题：
{rewritten_question}

3. 可用数据表信息：
{related_tables}

要求：
- 完善问题表述，使其专业、明确且可用于数据分析。
- 明确涉及的数据表和字段，但不生成 SQL。
- 输出简洁，仅返回最终完善后的专业问题文本。
- **禁止添加任何解释、说明或额外内容。**
"""




##########################思考相关提示词############################
THINK_TEMPLATE = """
你是 SQL 领域专家，专注于分析 SQL 查询、执行结果及其与用户问题的匹配度，并产出可在数据库中逐步执行的改进方案。请严格遵循以下指令。

【已知信息】
1) 用户问题：{question}
2) 历史执行 SQL：{sql}
3) 历史执行结果：{execute_info}
4) 当前问题相关表结构/元信息：{related_tables}
5) 上次执行 SQL 的执行结果没有满足用户问题的原因：{explain}
6) 上次思考计划（若有）：{plan}

【目标】
基于已知信息，判断历史 SQL 是否满足用户问题；若不满足，产出「可直接执行」的逐步修正计划。计划需在执行过程中不断优化，最终生成 **完美的问题修正版** 与可复现 SQL。最终仅按 {json_format} 输出严格 JSON。

——————————
一、理解用户问题
- 提炼核心意图与期望输出：指标、计算口径、时间/行业/地区维度、粒度/分组。
- 明确涉及表与字段（含同义值映射，如“装备制造” vs “装备制造业”）。
- 明确度量指标类型：sum、avg、count、比例/强度等。
- plan 中持续优化问题拆解，逐步靠近最终需求。

二、分析历史 SQL
逐项检查 SELECT / FROM / JOIN / WHERE / GROUP BY / HAVING：
- SELECT：是否覆盖所需维度与指标，聚合逻辑是否正确。
- JOIN：是否正确、是否导致笛卡尔积或遗漏。
- WHERE：条件是否合理，是否过度过滤或遗漏关键值。
- GROUP BY：是否与期望分组一致。
- 空值处理：指标或字段是否有鲁棒性处理。
- 单位/类型：如存在不一致，需在计划中统一。

三、验证执行结果
- 覆盖性：是否包含用户关注的全部维度/值。
- 完整性：是否存在空值/缺行。
- 一致性：聚合结果数量是否与预期匹配。
- 若结果为空或缺维度 → 触发字段确认机制。
- 判断 SQL 是否满足用户需求。

四、字段确认机制（仅执行一次）
若字段名或取值存在问题，执行：
A) 枚举取值：
   - SELECT DISTINCT <field> FROM <table>;
B) 若发现同义/近似值，记录映射并统一使用。

五、逐步改进计划（迭代优化）
每一步包含：
1) purpose：
   - 为解决已知问题而优化 SQL，使其满足用户需求 {question}。
   - 当信息充分时，可直接输出优化后的问题与最终 SQL。

六、输出规范
- 严格按 {json_format} 输出，可解析 JSON。
- 包含字段：
   "plan": [ ... ] —— 逐步优化执行计划，每步含 purpose。
- 禁止无限循环，每字段/维度最多一次 DISTINCT/元信息确认。
- 若数据库方言未知，可提供 2-3 种常见等价语句。
- 输出仅限只读/校验 SQL，禁止 DDL/DML。
- 保持简洁、可复现。

——————————
启发式提示
- 结果为空 → 优先怀疑字段拼写或过滤条件，触发字段确认。
- DISTINCT 不含用户值 → 使用真实取值修正 WHERE。
- JOIN 放大 → 使用子查询先聚合再 JOIN。
- plan 应体现“模糊问题 → 字段确认 → SQL 修正 → 最终完美结果”的迭代过程。
"""

JUDGE_TEMPLATE = """
你是 SQL 领域专家，专注于 SQL 执行结果与用户问题的匹配度评估。

【已知信息】
1) 用户问题：{question}
2) SQL 执行结果：{execute_info}
3) 相关表/字段信息：{related_tables}

【你的任务】
- 分析 SQL 执行结果是否满足用户问题。
- 直接返回纯 JSON格式：{json_format}：
 - 若匹配，则返回
   
      -"match": True,
      -"explain": "说明为什么结果满足用户问题，例如指标、聚合、过滤条件正确。"
    
- 若不匹配，返回：
    
      -"match": False,
      -"explain": "说明具体不满足的地方，例如缺少某个指标、过滤条件错误、聚合方式不正确等。"
    

【要求】
【严格要求】
1. 输出必须为 **纯 JSON 字符串**，不要包含 ``` 或其他 Markdown 包裹。
2. 输出 JSON 必须能直接被解析，无多余文本。
3. explain 简明、准确、针对匹配度。
4. 不生成 SQL 或其他额外信息。。

"""





